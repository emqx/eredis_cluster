services:
  redis-node-0: &redis-node
    image: public.ecr.aws/docker/library/redis:${REDIS_TAG}
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD} --port ${REDIS_PORT_NUMBER} --bind 0.0.0.0
    volumes:
      - ./test/config/users.acl:/usr/local/etc/redis/users.acl
      - ./test/config/overrides.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "30001:${REDIS_PORT_NUMBER}"
    environment:
      - 'REDIS_PASSWORD=${REDIS_PASSWORD}'
    networks:
      vpcbr:
        ipv4_address: 10.5.0.11

  redis-node-1:
    <<: *redis-node
    ports:
      - "30002:${REDIS_PORT_NUMBER}"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.12

  redis-node-2:
    <<: *redis-node
    ports:
      - "30003:${REDIS_PORT_NUMBER}"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.13

  redis-node-3:
    <<: *redis-node
    ports:
      - "30004:${REDIS_PORT_NUMBER}"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.14

  redis-node-4:
    <<: *redis-node
    ports:
      - "30005:${REDIS_PORT_NUMBER}"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.15

  redis-node-5:
    image: public.ecr.aws/docker/library/redis:${REDIS_TAG}
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD} --port ${REDIS_PORT_NUMBER} --bind 0.0.0.0
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    environment:
      - 'REDIS_PASSWORD=${REDIS_PASSWORD}'
    volumes:
      - ./test/config/users.acl:/usr/local/etc/redis/users.acl
      - ./test/config/overrides.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "30006:${REDIS_PORT_NUMBER}"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.16
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a ${REDIS_PASSWORD} --no-auth-warning cluster info | grep 'cluster_state:ok' && redis-cli -a ${REDIS_PASSWORD} --no-auth-warning cluster info | grep 'cluster_known_nodes:6'"]
      interval: 5s
      retries: 3

  redis-cluster-init:
    image: public.ecr.aws/docker/library/redis:${REDIS_TAG}
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    command: |
      sh -c '
        echo "Waiting for Redis nodes to be ready..."
        sleep 10

        echo "Creating Redis cluster..."
        redis-cli --cluster create \
          10.5.0.11:6379 \
          10.5.0.12:6379 \
          10.5.0.13:6379 \
          10.5.0.14:6379 \
          10.5.0.15:6379 \
          10.5.0.16:6379 \
          --cluster-replicas 1 \
          --cluster-yes \
          -a ${REDIS_PASSWORD}

        echo "Cluster initialization completed!"
      '
    environment:
      - 'REDIS_PASSWORD=${REDIS_PASSWORD}'
    networks:
      vpcbr:
        ipv4_address: 10.5.0.20

networks:
  vpcbr:
    driver: bridge
    ipam:
      config:
      - subnet: 10.5.0.0/16
        gateway: 10.5.0.1
